{"version":3,"sources":["pages/Search.js","pages/Cart.js","componentes/ButtonRadios.js","services/api.js","componentes/CardProduct.js","pages/ProdutoLista.js","componentes/ProductDetail.js","pages/FinalizarCompras.js","componentes/Header.js","App.js","serviceWorker.js","index.js"],"names":["Search","handleQuery","target","setState","query","value","state","this","funSearchQuery","props","className","type","name","onChange","data-testid","onClick","Component","Cart","sumValueTotal","carrinhoJson","localStorage","getItem","itensCarrinho","JSON","parse","arrayItens","Object","values","valor","forEach","produto","Number","length","price","sumValue","funcAddItem","funcRemoveItem","map","index","key","id","src","thumbnail","alt","title","disabled","available_quantity","toFixed","to","ButtonRadios","htmlFor","getCategories","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","CardProduct","shipping","free_shipping","ProdutoLista","resultSearch","ProductDetail","findProducts","products","reform","match","params","trim","find","product","searchApi","addAvaliacao","aval","avaliacoesJson","avaliacoesObj","push","setItem","stringify","avaliacoes","avaliacao","email","document","getElementById","comentario","notas","querySelectorAll","notaUsuario","nota","checked","style","border","avaliacaoText","enviar","recuperarAvaliacao","attributes","atribute","value_name","rows","cols","placeholder","avali","React","FinalizarCompras","Header","quantItemsToCart","App","carrinhoJSON","prevState","countItemsToCart","shift","count","itensCarrinhoJSON","categories","categorias","searchQuery","categoreID","categorieToSearch","obj","results","categoria","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8ec1019.chunk.js","sourcesContent":["// Requisito realizados por todos do grupo:\n// João Vitor Santos Costa, Maria Clara Medeiros Paulino,\n// Rafael de Alvarenga Reis, Angelica Diniz, Alexsandro Pinheiro Ferreira.\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/search.css';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: '',\n    };\n  }\n\n  handleQuery = ({ target }) => {\n    this.setState({\n      query: target.value,\n    });\n  }\n\n  render() {\n    const { query } = this.state;\n    const { funSearchQuery } = this.props;\n    return (\n      <div className=\"searchClass\">\n        <div>\n          <input\n            className=\"textInput\"\n            type=\"text\"\n            name=\"name\"\n            value={ query }\n            onChange={ this.handleQuery }\n            data-testid=\"query-input\"\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ () => { funSearchQuery(false, query); } }\n          >\n            Buscar\n          </button>\n        </div>\n        <p data-testid=\"home-initial-message\">\n          <strong>\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </strong>\n        </p>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  funSearchQuery: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/cart.css';\n\nclass Cart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      sumValue: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.sumValueTotal();\n  }\n\n  sumValueTotal = () => {\n    const carrinhoJson = localStorage.getItem('carrinho');\n    if (carrinhoJson) {\n      const itensCarrinho = JSON.parse(carrinhoJson);\n      const arrayItens = Object.values(itensCarrinho);\n      let valor = 0;\n      arrayItens.forEach((produto) => {\n        valor += Number(produto.length) * Number(produto[0].price);\n      });\n      this.setState({\n        sumValue: valor,\n      });\n    }\n  };\n\n  render() {\n    const { itensCarrinho, funcAddItem, funcRemoveItem } = this.props;\n    const { sumValue } = this.state;\n    const arrayItens = Object.values(itensCarrinho);\n    return (\n      <div className=\"page-cart\">\n        <h2>Carrinho de Compras</h2>\n        {\n          arrayItens.length > 0 ? (\n            arrayItens.map((index) => (\n              <div key={ index[0].id } className=\"card-cart-product\">\n                <div className=\"cart-thumb\">\n                  <img src={ index[0].thumbnail } alt={ index[0].title } />\n                </div>\n                <div className=\"cart-title\">\n                  <p data-testid=\"shopping-cart-product-name\">{index[0].title}</p>\n                </div>\n                <div className=\"cart-quant\">\n                  <button\n                    type=\"button\"\n                    data-testid=\"product-decrease-quantity\"\n                    onClick={ () => {\n                      funcRemoveItem(index[0]);\n                      this.sumValueTotal();\n                    } }\n                  >\n                    -\n                  </button>\n                  <p data-testid=\"shopping-cart-product-quantity\">\n                    {index.length}\n                  </p>\n                  <button\n                    type=\"button\"\n                    data-testid=\"product-increase-quantity\"\n                    disabled={ index.length >= index[0].available_quantity }\n                    onClick={ () => {\n                      funcAddItem(index[0]);\n                      this.sumValueTotal();\n                    } }\n                  >\n                    +\n                  </button>\n                </div>\n                <div className=\"cart-price\">\n                  <p>\n                    R$\n                    {' '}\n                    {index[0].price.toFixed(2)}\n                  </p>\n                </div>\n              </div>\n            ))\n          ) : (\n            <h2 data-testid=\"shopping-cart-empty-message\">\n              Seu carrinho está vazio\n            </h2>\n          )\n        }\n\n        <p className=\"total-value\">\n          <strong>\n            Valor total da compra:\n          </strong>\n          {' '}\n          R$\n          {' '}\n          {sumValue.toFixed(2)}\n        </p>\n\n        <br />\n\n        <button type=\"button\">\n          <Link to=\"/finalizar-compra\" data-testid=\"checkout-products \">\n            Finalizar Compras\n          </Link>\n        </button>\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nCart.propTypes = {\n  itensCarrinho: PropTypes.instanceOf(Object).isRequired,\n  funcAddItem: PropTypes.func.isRequired,\n  funcRemoveItem: PropTypes.func.isRequired,\n};\n\nexport default Cart;\n","// Requisito realizados por todos do grupo:\n// João Vitor Santos Costa, Maria Clara Medeiros Paulino,\n// Rafael de Alvarenga Reis, Angelica Diniz, Alexsandro Pinheiro Ferreira.\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/buttonRadios.css';\n\nclass ButtonRadios extends Component {\n  render() {\n    const { id, name, funSearchQuery } = this.props;\n    return (\n      <div className=\"category\">\n        <label htmlFor={ id }>\n          <input\n            type=\"radio\"\n            data-testid=\"category\"\n            name=\"categorias\"\n            id={ id }\n            onChange={ () => funSearchQuery(id, false) }\n          />\n          {name}\n        </label>\n        {/* <hr /> */}\n      </div>\n    );\n  }\n}\n\nButtonRadios.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  funSearchQuery: PropTypes.func.isRequired,\n};\n\nexport default ButtonRadios;\n","// Requisito realizados por todos do grupo:\n// João Vitor Santos Costa, Maria Clara Medeiros Paulino,\n// Rafael de Alvarenga Reis, Angelica Diniz, Alexsandro Pinheiro Ferreira.\n\nexport async function getCategories() {\n  // Implemente aqui\n  const response = await fetch(\n    'https://api.mercadolibre.com/sites/MLB/categories',\n  );\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  let response;\n  if (query && !categoryId) {\n    response = await fetch(\n      `https://api.mercadolibre.com/sites/MLB/search?q=${query}`,\n    );\n  }\n  if (!query && categoryId) {\n    response = await fetch(\n      `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`,\n    );\n  }\n  if (query && categoryId) {\n    response = await fetch(\n      `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`,\n    );\n  }\n  const data = await response.json();\n  return data;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { IoIosCube } from 'react-icons/io';\nimport '../styles/cardProduct.css';\n\nclass CardProduct extends Component {\n  render() {\n    const { produto, funcAddItem } = this.props;\n    return (\n      <div data-testid=\"product\" className=\"card-product\">\n        <div>\n          <img src={ produto.thumbnail } alt={ produto.title } />\n        </div>\n        <p className=\"price\">\n          R$\n          {' '}\n          {produto.price.toFixed(2)}\n        </p>\n        {\n          produto.shipping.free_shipping\n            && (\n              <p data-testid=\"free-shipping\" className=\"frete\">\n                Frete Grátis\n                <span>\n                  <IoIosCube />\n                </span>\n              </p>\n            )\n        }\n        <p>\n          <Link\n            data-testid=\"product-detail-link\"\n            to={ `/product-detail/${produto.id} ` }\n          >\n            {produto.title}\n          </Link>\n        </p>\n        <button\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ () => {\n            funcAddItem(produto);\n          } }\n        >\n          Adicionar ao carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nCardProduct.propTypes = {\n  produto: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n    shipping: PropTypes.instanceOf(Object).isRequired,\n  }).isRequired,\n  funcAddItem: PropTypes.func.isRequired,\n};\n\nexport default CardProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CardProduct from '../componentes/CardProduct';\nimport '../styles/produtoLista.css';\n\nclass ProdutoLista extends Component {\n  render() {\n    const { resultSearch, funcAddItem } = this.props;\n    return (\n      <section className=\"produto-lista\">\n        {resultSearch.map((value) => (\n          <CardProduct\n            key={ value.id }\n            produto={ value }\n            funcAddItem={ funcAddItem }\n          />\n        ))}\n      </section>\n    );\n  }\n}\n\nProdutoLista.propTypes = {\n  resultSearch: PropTypes.instanceOf(Array).isRequired,\n  funcAddItem: PropTypes.func.isRequired,\n};\n\nexport default ProdutoLista;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/productDetail.css';\n\nclass ProductDetail extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: {},\n      enviar: 'Enviar',\n    };\n  }\n\n  componentDidMount() {\n    // this.findProducts();\n    this.searchApi();\n  }\n\n  findProducts = () => {\n    const {\n      products,\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    const reform = id.trim();\n    const produto = products.find((value) => value.id === reform);\n    this.setState({\n      product: produto,\n    });\n  };\n\n  searchApi = async () => {\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    const data = await fetch(`https://api.mercadolibre.com/items/${id.trim()}`);\n    const response = await data.json();\n\n    this.setState({\n      product: response,\n    });\n  };\n\n  addAvaliacao = (aval, id) => {\n    const avaliacoesJson = localStorage.getItem('avaliacao');\n    const avaliacoesObj = JSON.parse(avaliacoesJson);\n\n    if (avaliacoesObj && avaliacoesObj[id]) {\n      avaliacoesObj[id].push(aval);\n      localStorage.setItem('avaliacao', JSON.stringify(avaliacoesObj));\n    } else {\n      const avaliacoes = { ...avaliacoesObj, [id]: [aval] };\n      localStorage.setItem('avaliacao', JSON.stringify(avaliacoes));\n    }\n  };\n\n  avaliacao = () => {\n    const { product } = this.state;\n    const email = document.getElementById('emailInput');\n    const comentario = document.getElementById('comentario');\n    const notas = document.querySelectorAll('input[name=nota]');\n    let notaUsuario = false;\n    notas.forEach((nota) => {\n      if (nota.checked) {\n        notaUsuario = nota;\n      }\n    });\n    if (email.value === '') {\n      email.style.border = 'solid 2px red';\n    } else if (!notaUsuario.id) {\n      const radioParents = document.getElementById('radio-container');\n      radioParents.style.border = 'solid 2px red';\n    } else {\n      const aval = {\n        email: email.value,\n        nota: notaUsuario.id,\n        avaliacaoText: comentario.value,\n      };\n      this.addAvaliacao(aval, product.id);\n    }\n    this.setState({\n      enviar: 'Enviar',\n    });\n  };\n\n  recuperarAvaliacao = () => {\n    const avaliacoesJson = localStorage.getItem('avaliacao');\n    if (avaliacoesJson) {\n      const avaliacoes = JSON.parse(avaliacoesJson);\n      return avaliacoes;\n    }\n    return {};\n  };\n\n  render() {\n    const { product, enviar } = this.state;\n    const { funcAddItem } = this.props;\n    const avaliacoes = this.recuperarAvaliacao();\n    return (\n      <div className=\"product-detail\">\n        <p data-testid=\"product-detail-name\">\n          {product.title}\n        </p>\n        <p>\n          R$\n          {' '}\n          {product.price}\n        </p>\n        <div className=\"img-container\">\n          <img src={ product.thumbnail } alt={ product.title } />\n        </div>\n        <h4>Especificações Técnicas</h4>\n        <ul>\n          {\n            product.shipping && product.shipping.free_shipping\n              && (\n                <li data-testid=\"free-shipping\">\n                  Frete Grátis\n                </li>\n              )\n          }\n          <li>\n            Atributos:\n            {product.attributes\n              && product.attributes.map((atribute) => (\n                <p key={ atribute.id }>\n                  {atribute.name}\n                  :\n                  {' '}\n                  {atribute.value_name}\n                </p>\n              ))}\n          </li>\n        </ul>\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ () => {\n              funcAddItem(product);\n            } }\n          >\n            Adicionar ao Carrinho\n          </button>\n        </div>\n\n        <br />\n\n        <form>\n          <label htmlFor=\"emailInput\">\n            {' '}\n            Digite seu email:\n            <input\n              type=\"email\"\n              name=\"emailInput\"\n              id=\"emailInput\"\n              data-testid=\"product-detail-email\"\n            />\n          </label>\n\n          <br />\n\n          <div id=\"radio-container\">\n            <p>Adicione uma nota</p>\n            <label htmlFor=\"1\">\n              <input type=\"radio\" name=\"nota\" id=\"1\" data-testid=\"1-rating\" />\n              1\n            </label>\n            <label htmlFor=\"2\">\n              <input type=\"radio\" name=\"nota\" id=\"2\" data-testid=\"2-rating\" />\n              2\n            </label>\n            <label htmlFor=\"3\">\n              <input type=\"radio\" name=\"nota\" id=\"3\" data-testid=\"3-rating\" />\n              3\n            </label>\n            <label htmlFor=\"4\">\n              <input type=\"radio\" name=\"nota\" id=\"4\" data-testid=\"4-rating\" />\n              4\n            </label>\n            <label htmlFor=\"5\">\n              <input type=\"radio\" name=\"nota\" id=\"5\" data-testid=\"5-rating\" />\n              5\n            </label>\n          </div>\n\n          <br />\n\n          <label htmlFor=\"comentario\">\n            <textarea\n              id=\"comentario\"\n              rows=\"10\"\n              cols=\"30\"\n              placeholder=\"Descrava a avaliação\"\n              data-testid=\"product-detail-evaluation\"\n            />\n          </label>\n          <div>\n            <button\n              onClick={ () => {\n                this.avaliacao();\n              } }\n              type=\"button\"\n              data-testid=\"submit-review-btn\"\n            >\n              {enviar}\n            </button>\n          </div>\n        </form>\n        <div>\n          {avaliacoes[product.id] ? (\n            avaliacoes[product.id].map((avali) => (\n              <div key={ avali.email }>\n                <p>\n                  <span>{avali.email}</span>\n                  <span>{avali.nota}</span>\n                </p>\n                <p>{avali.avaliacaoText}</p>\n              </div>\n            ))\n          ) : (\n            <h3>Não há Avaliações</h3>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nProductDetail.propTypes = {\n  products: PropTypes.instanceOf(Array).isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n  funcAddItem: PropTypes.func.isRequired,\n};\nexport default ProductDetail;\n","import React, { Component } from 'react';\nimport '../styles/finalizarCompra.css';\n// import PropTypes from 'prop-types';\n\nclass FinalizarCompras extends Component {\n  render() {\n    // const { itensCarrinho } = this.props;\n    return (\n      <section className=\"finalizar-compra\">\n        <h2>Finalizar Compra</h2>\n        <label htmlFor=\"fullNameInput\">\n          Nome completo\n        </label>\n        <div>\n            <input\n              data-testid=\"checkout-fullname\"\n              type=\"text\"\n              id=\"fullNameInput\"\n              name=\"fullNameInput\"\n            />\n        </div>\n        <label htmlFor=\"emailInput\">\n          Email\n        </label>\n        <div>\n            <input\n              data-testid=\"checkout-email\"\n              type=\"text\"\n              id=\"emailInput\"\n              name=\"emailInput\"\n              />\n        </div>\n        <label htmlFor=\"cpfInput\">\n          CPF\n        </label>\n        <div>\n            <input\n              data-testid=\"checkout-cpf\"\n              type=\"text\"\n              id=\"cpfInput\"\n              name=\"cpfInput\"\n              />\n        </div>\n        <label htmlFor=\"phoneInput\">\n          Telefone\n        </label>\n        <div>\n            <input\n              data-testid=\"checkout-phone\"\n              type=\"text\"\n              id=\"phoneInput\"\n              name=\"phoneInput\"\n            />\n        </div>\n        <label htmlFor=\"cepInput\">\n          CEP\n        </label>\n        <div>\n            <input\n              data-testid=\"checkout-cep\"\n              type=\"text\"\n              id=\"cepInput\"\n              name=\"cepInput\"\n            />\n        </div>\n        <label htmlFor=\"addressInput\">\n          Endereço\n        </label>\n        <div>\n          <input\n            data-testid=\"checkout-address\"\n            type=\"text\"\n            id=\"addressInput\"\n            name=\"addressInput\"\n          />\n        </div>\n\n        <div>\n          <button>\n            Finalizar\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\n// FinalizarCompras.propTypes = {\n//   itensCarrinho: PropTypes.instanceOf(Object).isRequired,\n// };\n\nexport default FinalizarCompras;\n","import React, { Component } from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport '../styles/header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { IoMdCart } from 'react-icons/io';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { quantItemsToCart } = this.props;\r\n    return (\r\n      <header>\r\n        <h1>\r\n          <Link to=\"/\">\r\n            Online Store\r\n          </Link>\r\n        </h1>\r\n        <Link id=\"button-cart\" to=\"/carrinho\" data-testid=\"shopping-cart-button\">\r\n          <IoMdCart />\r\n          <span data-testid=\"shopping-cart-size\">\r\n            {\r\n              quantItemsToCart\r\n            }\r\n          </span>\r\n        </Link>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  quantItemsToCart: Proptypes.number.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","// Requisito realizados por todos do grupo:\n// João Vitor Santos Costa, Maria Clara Medeiros Paulino,\n// Rafael de Alvarenga Reis, Angelica Diniz, Alexsandro Pinheiro Ferreira.\n\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Search from './pages/Search';\nimport Cart from './pages/Cart';\nimport ButtonRadios from './componentes/ButtonRadios';\nimport { getCategories, getProductsFromCategoryAndQuery } from './services/api';\nimport ProdutoLista from './pages/ProdutoLista';\nimport ProductDetail from './componentes/ProductDetail';\nimport FinalizarCompras from './pages/FinalizarCompras';\nimport Header from './componentes/Header';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categorias: [],\n      resultSearch: [],\n      categorieToSearch: '',\n      itensCarrinho: {},\n      quantItemsToCart: 0,\n    };\n  }\n\n  componentDidMount() {\n    const carrinhoJSON = localStorage.getItem('carrinho');\n    if (carrinhoJSON) {\n      const itensCarrinho = JSON.parse(carrinhoJSON);\n      this.setState({\n        itensCarrinho,\n      });\n    }\n    this.categories();\n    this.countItemsToCart();\n  }\n\n  funcAddItem = (produto) => {\n    const { id } = produto;\n    const carrinhoJSON = localStorage.getItem('carrinho');\n    if (carrinhoJSON) {\n      const itensCarrinho = JSON.parse(carrinhoJSON);\n      if (itensCarrinho[id]) {\n        itensCarrinho[id].push(produto);\n        localStorage.setItem('carrinho', JSON.stringify(itensCarrinho));\n        this.setState({\n          itensCarrinho,\n        });\n      } else {\n        localStorage\n          .setItem('carrinho', JSON.stringify({ ...itensCarrinho, [id]: [produto] }));\n        this.setState((prevState) => ({\n          itensCarrinho: { ...prevState.itensCarrinho, [id]: [produto] },\n        }));\n      }\n    } else {\n      localStorage.setItem('carrinho', JSON.stringify({ [id]: [produto] }));\n      this.setState({\n        itensCarrinho: { [id]: [produto] },\n      });\n    }\n    this.countItemsToCart();\n  };\n\n  funcRemoveItem = (produto) => {\n    const { id } = produto;\n    const carrinhoJSON = localStorage.getItem('carrinho');\n    const itensCarrinho = JSON.parse(carrinhoJSON);\n    if (itensCarrinho[id].length > 1) {\n      itensCarrinho[id].shift(produto);\n    } else {\n      delete itensCarrinho[id];\n    }\n    localStorage.setItem('carrinho', JSON.stringify(itensCarrinho));\n    this.setState({\n      itensCarrinho,\n    });\n    this.countItemsToCart();\n  };\n\n  countItemsToCart = () => {\n    let count = 0;\n    const itensCarrinhoJSON = localStorage.getItem('carrinho');\n    if (itensCarrinhoJSON) {\n      const itensCarrinho = JSON.parse(itensCarrinhoJSON);\n      const itensCarrinhoArray = Object.values(itensCarrinho);\n      itensCarrinhoArray.forEach((produto) => {\n        count += produto.length;\n      });\n      this.setState({\n        quantItemsToCart: count,\n      });\n    }\n  }\n\n  categories = async () => {\n    this.setState({\n      categorias: await getCategories(),\n    });\n  };\n\n  searchQuery = async (categoreID, query) => {\n    const { categorieToSearch } = this.state;\n    let obj;\n    if (categorieToSearch && !categoreID) {\n      obj = await getProductsFromCategoryAndQuery(categorieToSearch, query);\n    } else {\n      obj = await getProductsFromCategoryAndQuery(categoreID, query);\n    }\n    this.setState({\n      resultSearch: obj.results,\n      categorieToSearch: categoreID,\n    });\n  };\n\n  render() {\n    const { categorias, resultSearch, itensCarrinho, quantItemsToCart } = this.state;\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header quantItemsToCart={ quantItemsToCart } />\n          <main>\n            <aside>\n              {categorias.map((categoria) => (\n                <ButtonRadios\n                  key={ categoria.id }\n                  id={ categoria.id }\n                  name={ categoria.name }\n                  funSearchQuery={ this.searchQuery }\n                />\n              ))}\n            </aside>\n            {resultSearch.length > 0 && <Redirect to=\"lista-produtos\" />}\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={ () => <Search funSearchQuery={ this.searchQuery } /> }\n              />\n              <Route\n                path=\"/finalizar-compra\"\n                render={ (props) => (\n                  <FinalizarCompras { ...props } itensCarrinho={ itensCarrinho } />\n                ) }\n              />\n              <Route\n                path=\"/carrinho\"\n                render={ () => (\n                  <Cart\n                    itensCarrinho={ itensCarrinho }\n                    funcAddItem={ this.funcAddItem }\n                    funcRemoveItem={ this.funcRemoveItem }\n                  />\n                ) }\n              />\n              <Route\n                path=\"/lista-produtos\"\n                render={ (props) => (\n                  <ProdutoLista\n                    { ...props }\n                    resultSearch={ resultSearch }\n                    funcAddItem={ this.funcAddItem }\n                  />\n                ) }\n              />\n              <Route\n                path=\"/product-detail/:id\"\n                render={ (props) => (\n                  <ProductDetail\n                    { ...props }\n                    products={ resultSearch }\n                    funcAddItem={ this.funcAddItem }\n                  />\n                ) }\n              />\n            </Switch>\n          </main>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}